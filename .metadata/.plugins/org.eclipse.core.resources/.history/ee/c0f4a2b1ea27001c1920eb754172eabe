package ex17collection;

import java.util.Date;
import java.util.HashSet;

import common.Teacher;

/*
 HashSet컬렉션
 	:Set계열의 인터페이스를 구현한 컬렉션으로
 	-객체가 순서없이 저장됨
 	-객체의 중복저장을 기본적으로 허용하지 않음
 	단,기본클래스가 아닌 새롭게 정의한 클래스라면
 	hashCode(), equals()를 적절히 오버라이딩하여 정의해야 한다
 	-List가 배열의 성격이라면 Set은 집합의 성격을 가짐
 */
public class Ex04HashSet1 {

	public static void main(String[] args) {
		/*
		 1]set컬렉션 생성
		 */
		//Object를 기반으로 한 Set컬렉션 생성
		HashSet<Object> set=new HashSet<Object>();
		
		//2]다양한 객체 생성
		String strObject1="JAVA";
		String strObject2=new String("KOSMO 61기");
		Date dateObject=new Date();
		int number=100;//정수타입은 컬렉션에 저장시 Integer객체로 Boxing됨
		Teacher teacher=new Teacher("김봉두",55,"체육");
		/*
		 3]객체저장
		 	:add()메서드를 통해 저장되고, 문제가 없다면 true가 반환됨
		 */
		System.out.println(set.add(strObject1));//true반환
		set.add(strObject2);
		set.add(dateObject);
		set.add(number);
		set.add(teacher);
		/*
		 4]저장된 객체수 얻기
		 */
		System.out.println("[중복저장 전 객체수]:"+set.size());//5개
		
		/*
		 5-1]기본클래스형 객체 중복저장
		 	:기본클래스인 경우 별도의 오버라이딩이 없어도
		 	중복이 제거된다. 따라서 아래의 경우 false가 반환됨
		 */
		System.out.println(set.add(strObject2)?"저장성공":"저장실패");
		System.out.println("[중복(String)저장 후 객체수]:"+set.size());//5개
		/*
		 5-2]개발자가 정의한 객체중복저장
		 */
		Teacher teacher2=new Teacher("김봉두",55,"체육");
		
	}

}
